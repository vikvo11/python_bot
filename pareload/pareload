#!/bin/bash



# This file contains some extra stuff to make the PA environment
# tolerable to power-users


## Things it does
#   -- creates the ~/.config/pareload/* files
#   -- creates the bin directory in ~
#   -- adds $HOME/bin to the Global Path
#   -- copies the pareload files to bin directory in home folder
#   
## Args
# --all -a                      Do everything
# --pass -p                     Create Passfile and exit
# --create-system-folders -c    creates system folders such as bin, lib, etc in the home directory

# SET GLOBAL VARS HERE
HELP_MESSAGE="This is a dummy help message"

# create the .config directory
if (test -d $HOME/.config)
then
  echo "Didn't need to create ~/.config directory"
else
  mkdir $HOME/.config
fi

sleep 1

# create the ~/.config/pareload directory
if (test -d $HOME/.config/pareload )
then
  echo "Didn't need to create ~/.config/pareload directory"
else
  mkdir $HOME/.config/pareload
fi

sleep 1

echo $*|awk '
{
  for (n=NF;n > 0;n--)
    {
      if ($n == "--help")
        echo $HELP_MESSAGE
        exit
    }
}'

#create the keypass file
if ( test -e $HOME/.config/pareload/passkey)
then
  echo "Didn't need to create the $HOME/.config/pareload/passkey file"
else
  touch $HOME/.config/pareload/passkey
fi

sleep 1

# create a ~/bin directory
if (test -d $HOME/bin)
then
  echo "directory 'bin' already exists"
else
  mkdir $HOME/bin
fi

sleep 1

echo "moving files to $HOME/bin..."
mkdir $HOME/bin/pareload
touch $HOME/bin/__init__.py $HOME/bin/pareload/__init__.py
cp extras.py $HOME/bin/pareload/extras.py
cp pa-pass $HOME/bin/pa-pass
cp pa-refresh $HOME/bin/pa-refresh

sleep 1

# add ~/bin to $PATH
echo "adding ~/bin to \$PATH..."
echo "export PATH=\$PATH:\$HOME/bin" >> $HOME/.bashrc
echo "reloading bash...."
source $HOME/.bashrc

sleep 1

#set password
echo
echo
echo "Enter your PythonAnywhere password"
echo
pa-pass -p

echo "Job Done!"
echo
echo "run pa-refresh to refresh the webapp. run pa-refresh -h for help."
exit
