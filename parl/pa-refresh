#!/usr/bin/python

import mechanize
import time
import os
import sys

from pareload.extras import extras,VERSION


'''
The Grand TO-DO list

    -- write tests

    -- make the mechanize browser run in the background so that reloading
    or any other actions as the user can easily be done
'''

##SET UP GLOBAL VARS
DOMAIN = None
USERNAME = os.environ['USER']
PASSWORD = None

ARGS = sys.argv[1:]

HELP_MESSAGE = '''
USAGE: high-reload [OPTION]
Reload the PythonAnywhere Server

    -h --help       Display this message and exit
    -v --version    Display version information and exit
    -H              Same as -h
    -V              Same as -v

    -u --username   Specify the userrname
    -p --password   Specify the password
    -d --domain     Specify the Domain

'''

VERSION_MESSAGE = '''
high-cyril {0}
COPYRIGHT (C) Ayush Jha
LICENSE GPLv3+: you are free to change and redistribute it
There is NO WARRANTY, to the extent permitted by law.
'''.format(VERSION)




##Check for set arguements
for arg in ARGS:
    if arg == '-h' or arg == '-H' or arg == '--help':
        print HELP_MESSAGE
        sys.exit(0)
    if arg == '-v' or arg =='--version' or arg == '-V':
        print VERSION_MESSAGE
        sys.exit(0)
    if arg == '-u' or arg == '--username':
        USERNAME = ARGS[ARGS.index(arg)+1]
        if USERNAME[:2] == '--' or USERNAME[0] == '-':
            print "Error! Username {} is not valid!"
            sys.sxit(1)
    if arg == '-p' or arg == '--password':
        PASSWORD = ARGS[ARGS.index(arg)+1]
    if arg == '-d' or arg == '--domain':
        DOMAIN = ARGS[ARGS.index(arg)+1]
        ## to-do : check if domain is authentic




def main(username=None, password=None, domain=None):
    '''
    Reloads the PythonAnywhere server.
    Args : 
    username : Your username. If None is specified, the username stored at
    os.environ['USER'] is used.
    Default is None.

    password : If None is specified, password stored in 
    ~/.config/high-cyril/passkey is used.
    Default is None.

    domain : domain arguement is used when the user has a special domain-name
    for their app.
    Default is None.
    Domain can be spedified with the -d arguement
    '''
    if username is None:
        username = raw_input('Username: ')
    if password is None:
        # check if password is in ~/.config/high-cyril/passkey
        f = open(extras.passpath)
        password = f.read()
        if password == "": # if there isn't any password in passkey
            sys.exit(0)
            print '''Welcome to high-cyril! We are a happy lazy bunch here :D.
            It seems you haven't configured the password yet.
            run `high-pass -p <your pass>` before coming here'''
        f.close()

    print "reloading server...."
    # set the user agent for HTTP Header. This works right?
    user_agent = "Mozilla/5.0 (X11; Linux x86_64; rv:18.0) Gecko/20100101 Firefox/18.0 (compatible;)"
    accept = '*/*'

    br = mechanize.Browser()
    br.addheaders = [('User-Agent', user_agent), ('Accept', accept)]
    br.set_handle_robots(False)
    br.set_handle_refresh(False)
    br.open('https://www.pythonanywhere.com/login/')

    br.select_form(nr=0)
    br.form['username'] = username
    br.form['password'] = password
    br.submit()
    if domain == None:
        ##works for <username>.pythonanywhere.com
        resp = br.open('https://www.pythonanywhere.com/user/{0}/webapps/{0}.pythonanywhere.com/reload'.format(username.lower()))
    else:   ## works for your custom doamin
        resp = br.open('https://www.pythonanywhere.com/user/{0}/webapps/{1}/reload'.format(username, domain.lower()), data={})
    response = resp.read() 
    print response
    if response == "OK": ## the reload page returns 'OK' if everythiong goes well
        print ("Server has been reloaded!")
    else:
        print ('''There was an error.
               This might have occured because you gave us the wrong password.
               See the output of  `high-pass` to see if your password we're
               using is correct.''')

    br.open('https://www.pythonanywhere.com/logout') # logout the user after reload is done

if __name__ == '__main__':
    main(username=USERNAME, password=PASSWORD,domain=DOMAIN)
